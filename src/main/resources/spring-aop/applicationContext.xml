<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd" >
       
	<!-- spring-aop x1.0 -->
	<!-- 1target 目标类对象 -->
	<bean id="userService" class="com.pegasus.springaop.service.impl.UserServiceImpl" />
	<bean id="calcService" class="com.pegasus.springaop.service.impl.CalcServiceImpl" />
	<!-- 2Advice -->
	<bean id="logAdivce" class="com.pegasus.springaop.advice.LogAdvice" />
	
	<!-- 3配置Joincut并织入 -->
	
	<aop:config>
		<!-- 0切入点 (UserSerivceImp类中所有方法)-->
		<!-- <aop:pointcut id="pc" expression="within(com.pegasus.springaop.service.impl.*ServiceImpl)" /> -->
		
		<!-- 0切入点(execution) 精确匹配:execution(返回值类型 包名.类名.方法名(方法形参类型1，方法形参类型2...))-->
		<!-- <aop:pointcut id="pc" expression="execution(int com.pegasus.springaop.service.impl.CalcServiceImpl.add(int,int))" /> -->
		<!-- 0切入点(execution) */..匹配(方法的形参用..匹配)-->
		<aop:pointcut id="pc" expression="execution(* com.pegasus.springaop.service.impl.*.*(..))" />
		<!-- 1织入 --> 
		<aop:aspect ref="logAdivce" >
			<!-- 0将logAdvice中的log方法以前置增强的方式织入到pc对应的切入点 -->
			<!-- <aop:before method="log" pointcut-ref="pc" />	 -->
			
			<!-- 0后置增加是返回值的，所以returning属性中值对应Advice中形参 -->
			<!-- <aop:after-returning method="logAfter" pointcut-ref="pc" returning="returnValue" /> -->
			
			<!-- 0异常增加是e，所以returning属性中值对应Advice中形参 -->
			<!-- <aop:after-throwing method="logException" pointcut-ref="pc" throwing="e" /> -->
			
			<!-- 0环绕增加 -->
			<aop:around method="logInterceptor" pointcut-ref="pc" />
			
		</aop:aspect>
	</aop:config>
	
</beans>